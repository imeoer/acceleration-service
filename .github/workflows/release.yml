name: Release

on:
  push:
    branches:
      - 'main'
    tags:
      - v[0-9]+.[0-9]+.[0-9]+
  pull_request:
    branches:
      - 'main'

env:
  REGISTRY: ghcr.io
  ORGANIZATION: ${{ github.repository }}

jobs:
  build_image:
    runs-on: ubuntu-latest
    env:
      GO_VERSION: 1.17
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Golang
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}

    # - name: Build Image
    #   # Enable tty for docker
    #   shell: 'script -q -e -c "bash {0}"'
    #   run: |
    #     make release-image
    #     docker run -v $(CWD)/misc/config/config.yaml.nydus.tmpl:/etc/acceld-config.yaml -it -d --rm -p 2077:2077 goharbor/harbor-acceld /etc/acceld-config.yaml
    #     sleep 5
    #     curl -f http://127.0.0.1:2077/api/v1/health

    - name: Login Registry
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Image
      run: |
        TAG=$GITHUB_REF_NAME
        [ "$TAG" == "main" ] && TAG="latest"
        [ "$GITHUB_EVENT_NAME" == "pull_request" ] && TAG="local"
        docker build -t ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/harbor-acceld:$TAG -f script/release/Dockerfile .
        # Only push for non pull_request
        if [ "$GITHUB_EVENT_NAME" != "pull_request" ]; then
            docker push ${{ env.REGISTRY }}/${{ env.ORGANIZATION }}/harbor-acceld:$TAG
        fi

  release_binary:
    runs-on: ubuntu-latest
    env:
      GO_VERSION: 1.17
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: cache go mod
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go
      - name: Build Binary
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.43.0
          export PATH=$PATH:$(go env GOPATH)/bin
          make
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: harbor-acceld-artifacts
          path: |
            acceld
            accelctl

  upload_binary:
    runs-on: ubuntu-latest
    needs: [release_binary]
    steps:
      - uses: actions/checkout@v2
      - name: install hub
        run: |
          HUB_VER=$(curl -s "https://api.github.com/repos/github/hub/releases/latest" | jq -r .tag_name | sed 's/^v//')
          wget -q -O- https://github.com/github/hub/releases/download/v$HUB_VER/hub-linux-amd64-$HUB_VER.tgz | \
          tar xz --strip-components=2 --wildcards '*/bin/hub'
          sudo mv hub /usr/local/bin/hub
      - name: download artifacts
        uses: actions/download-artifact@v2
        with:
          name: harbor-acceld-artifacts
          path: harbor-acceld
      - name: upload artifacts
        run: |
          tag=$(echo $GITHUB_REF | cut -d/ -f3-)
          tarball="harbor-acceld-$tag-x86_64.tgz"
          chmod +x harbor-acceld/*
          tar cf - harbor-acceld | gzip > ${tarball}
          echo "tag=$tag" >> $GITHUB_ENV
          echo "tarball=$tarball" >> $GITHUB_ENV
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: "harbor-acceld ${{ env.tag }} release"
          generate_release_notes: true
          files:
            ${{ env.tarball }}
